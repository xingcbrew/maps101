# clean data
dat1 <- subset(dat1, select = c("Name.in.English", "Countries", "Country.codes.alpha.3", "Degree.of.endangerment",
"Number.of.speakers", "Latitude", "Longitude"))
names(dat1) <- c("language", "country", "country_code", "degree_endanger", "speakers", "lat", "long")
# where number of speakers is 0, make degree endangered 'extinct'
dat1$degree_endanger[dat1$speakers ==0] <- 'Extinct'
# disable scientific notation
options(scipen = 999)
# extract data on canada
nafta <- dat1[dat1$country_code == "CAN" | dat1$country_code == "CAN, USA" | dat1$country_code == "USA" |
dat1$country_code == "MEX",]
# load world map using ggplot2
worldmap <- borders("world", colour="gray50", fill="gray") # create a layer of borders
ggplot() + worldmap +
geom_point(data = nafta,
aes(x = long, y = lat,
color = degree_endanger)) +
theme_nothing(legend = TRUE)
### using leaflet
# make colour palette
pal <- colorFactor(c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
domain = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"))
# pop-up information
lab <- paste(nafta$language,"|", "Speakers(s):", nafta$speakers, sep = " ")
# reorder degree_endanger factor levels
m <- leaflet(data = nafta) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 3)
lang_map <- m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
lang_map
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = pal(degree_endanger)) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~degree_endanger) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(-degree_endanger)) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
?addCircles
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(domain)) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal()) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
?pal
pal <- colorFactor(c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
levels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"))
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endangered)) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = (degree_endanger),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = (~degree_endanger),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"),
labels = ~pal(degree_endanger),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = pal,
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = ~pal,
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = pal(),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = pal(degree_endager),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = ~pal(degree_endager),
labels = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"),
title = "Degree Endangered", opacity = 0.6)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger))
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", colors = pal, values = degree_endanger)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = degree_endanger)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = !pal, values = ~degree_endanger)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger)
pal2 <- colorFactor(c("red", "orange", "green", "blue", "black"),
domain = c("Vulnerable", "Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"))
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal2(degree_endanger)) %>%
addLegend("topright", pal = pal2, values = ~degree_endanger)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal2(degree_endanger)) %>%
addLegend("topright", pal = pal2, values = ~degree_endanger, labels = sort(degree_endager))
pal <- colorFactor(c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"), nafta$degree_endanger)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger, labels = sort(degree_endager))
nafta$degree_endanger <- factor(nafta$degree_endanger, levels = c("Vulnerable",
"Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"))
pal <- colorFactor(c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"), nafta$degree_endanger)
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
nafta$degree_endanger <- factor(nafta$degree_endanger, levels = c("Vulnerable",
"Definitely Endangered", "Critically Endangered",
"Severely Endangered", "Extinct"))
summary(nafta$degree_endanger)
View(nafta)
dat1 <- read.csv("/Users/xing/Documents/maps101/data.csv", strip.white=TRUE)
# clean data
dat1 <- subset(dat1, select = c("Name.in.English", "Countries", "Country.codes.alpha.3", "Degree.of.endangerment",
"Number.of.speakers", "Latitude", "Longitude"))
names(dat1) <- c("language", "country", "country_code", "degree_endanger", "speakers", "lat", "long")
# where number of speakers is 0, make degree endangered 'extinct'
dat1$degree_endanger[dat1$speakers ==0] <- 'Extinct'
# disable scientific notation
options(scipen = 999)
# extract data on canada
nafta <- dat1[dat1$country_code == "CAN" | dat1$country_code == "CAN, USA" | dat1$country_code == "USA" |
dat1$country_code == "MEX",]
View(nafta)
nafta$degree_endanger
str(nafta)
nafta$degree_endanger <- factor(nafta$degree_endanger, levels = c("Vulnerable",
"Definitely endangered", "Critically endangered",
"Severely endangered", "Extinct"))
nafta$degree_endanger
pal <- colorFactor(c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"), nafta$degree_endanger)
# pop-up information
lab <- paste(nafta$language,"|", "Speakers(s):", nafta$speakers, sep = " ")
# reorder degree_endanger factor levels
m <- leaflet(data = nafta) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 3)
lang_map <- m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
lang_map
lab <- paste(nafta$language,"|", "Speakers:", nafta$speakers, sep = " ")
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
nafta$speakers <- ifelse(nafta$speakers == NA, "unknown", nafta$speakers)
lab <- paste(nafta$language,"|", "Speakers:", nafta$speakers, sep = " ")
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
nafta$speakers <- ifelse(nafta$speakers == NA, "unknown", nafta$speakers)
lab <- paste(nafta$language,"|", "Speakers:", nafta$speakers, sep = " ")
# make the map
m <- leaflet(data = nafta) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 3)
lang_map <- m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
lang_map
nafta$speakers <- ifelse(nafta$speakers == "NA", "unknown", nafta$speakers)
lab <- paste(nafta$language,"|", "Speakers:", nafta$speakers, sep = " ")
m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
# import data (strip.white removes leading and trailing whitespace)
dat1 <- read.csv("/Users/xing/Documents/maps101/data.csv", strip.white=TRUE)
# clean data
dat1 <- subset(dat1, select = c("Name.in.English", "Countries", "Country.codes.alpha.3", "Degree.of.endangerment",
"Number.of.speakers", "Latitude", "Longitude"))
names(dat1) <- c("language", "country", "country_code", "degree_endanger", "speakers", "lat", "long")
# where number of speakers is 0, make degree endangered 'extinct'
dat1$degree_endanger[dat1$speakers ==0] <- 'Extinct'
# disable scientific notation
options(scipen = 999)
# extract data on canada
nafta <- dat1[dat1$country_code == "CAN" | dat1$country_code == "CAN, USA" | dat1$country_code == "USA" |
dat1$country_code == "MEX",]
### using leaflet
# relevel factors so that colors match and legend ordered correctly
nafta$degree_endanger <- factor(nafta$degree_endanger, levels = c("Vulnerable",
"Definitely endangered", "Critically endangered",
"Severely endangered", "Extinct"))
# make colour palette
pal <- colorFactor(c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"), nafta$degree_endanger)
# pop-up information
lab <- paste(nafta$language,"|", "Speakers:", nafta$speakers, sep = " ")
# make the map
m <- leaflet(data = nafta) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 3)
lang_map <- m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
lang_map
dat1 <- read.csv("/Users/xing/Documents/maps101/data.csv", strip.white=TRUE)
# clean data
dat1 <- subset(dat1, select = c("Name.in.English", "Countries", "Country.codes.alpha.3", "Degree.of.endangerment",
"Number.of.speakers", "Latitude", "Longitude"))
names(dat1) <- c("language", "country", "country_code", "degree_endanger", "speakers", "lat", "long")
# where number of speakers is 0, make degree endangered 'extinct'
dat1$degree_endanger[dat1$speakers ==0] <- 'Extinct'
# disable scientific notation
options(scipen = 999)
# extract data on canada
namer <- dat1[dat1$country_code == "CAN" | dat1$country_code == "CAN, USA" | dat1$country_code == "USA" |
dat1$country_code == "MEX",]
### using leaflet
# relevel factors so that colors match and legend ordered correctly
namer$degree_endanger <- factor(namer$degree_endanger, levels = c("Vulnerable",
"Definitely endangered", "Critically endangered",
"Severely endangered", "Extinct"))
# make colour palette
pal <- colorFactor(c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"), namer$degree_endanger)
# pop-up information
lab <- paste(namer$language,"|", "Speakers:", namer$speakers, sep = " ")
# make the map
m <- leaflet(data = namer) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 3)
lang_map <- m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
rm(nafta)
rm(can)
library(ggplot2)
library(dplyr)
library(reshape2)
library(ggmap)
library(rgdal)
library(rgeos)
library(maptools)
library(tidyr)
library(tmap)
install.packages('tmap')
library(tmap)
library(raster) #to read in shapefile
library(sp)
library(leaflet)
#set working directory
setwd("/Users/xing/Documents/maps101")
# import data (strip.white removes leading and trailing whitespace)
dat1 <- read.csv("/Users/xing/Documents/maps101/data.csv", strip.white=TRUE)
# clean data
dat1 <- subset(dat1, select = c("Name.in.English", "Countries", "Country.codes.alpha.3", "Degree.of.endangerment",
"Number.of.speakers", "Latitude", "Longitude"))
names(dat1) <- c("language", "country", "country_code", "degree_endanger", "speakers", "lat", "long")
# where number of speakers is 0, make degree endangered 'extinct'
dat1$degree_endanger[dat1$speakers ==0] <- 'Extinct'
# disable scientific notation
options(scipen = 999)
# extract data on canada
namer <- dat1[dat1$country_code == "CAN" | dat1$country_code == "CAN, USA" | dat1$country_code == "USA" |
dat1$country_code == "MEX",]
# relevel factors so that colors match and legend ordered correctly
namer$degree_endanger <- factor(namer$degree_endanger, levels = c("Vulnerable",
"Definitely endangered", "Critically endangered",
"Severely endangered", "Extinct"))
# make colour palette
pal <- colorFactor(c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"), namer$degree_endanger)
# pop-up information
lab <- paste(namer$language,"|", "Speakers:", namer$speakers, sep = " ")
# make the map
m <- leaflet(data = namer) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 3)
lang_map <- m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
lang_map
library(ggplot2)
library(dplyr)
library(reshape2)
library(ggmap)
library(maptools)
library(tidyr)
library(leaflet)
#set working directory
setwd("/Users/xing/Documents/maps101")
# import data (strip.white removes leading and trailing whitespace)
dat1 <- read.csv("/Users/xing/Documents/maps101/data.csv", strip.white=TRUE)
# clean data
dat1 <- subset(dat1, select = c("Name.in.English", "Countries", "Country.codes.alpha.3", "Degree.of.endangerment",
"Number.of.speakers", "Latitude", "Longitude"))
names(dat1) <- c("language", "country", "country_code", "degree_endanger", "speakers", "lat", "long")
# where number of speakers is 0, make degree endangered 'extinct'
dat1$degree_endanger[dat1$speakers == 0] <- 'Extinct'
# disable scientific notation
options(scipen = 999)
# extract data on north america
namer <- dat1[dat1$country_code == "CAN" | dat1$country_code == "CAN, USA" | dat1$country_code == "USA" |
dat1$country_code == "MEX",]
# relevel factors so that colors match and legend ordered correctly
namer$degree_endanger <- factor(namer$degree_endanger, levels = c("Vulnerable",
"Definitely endangered", "Critically endangered",
"Severely endangered", "Extinct"))
# make colour palette
pal <- colorFactor(c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"), namer$degree_endanger)
# pop-up information
lab <- paste(namer$language,"|", "Speakers:", namer$speakers, sep = " ")
# make the map
m <- leaflet(data = namer) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 3)
lang_map <- m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
lang_map
#set working directory
setwd("/Users/xing/Documents/maps101")
# import data (strip.white removes leading and trailing whitespace)
dat1 <- read.csv("/Users/xing/Documents/maps101/data.csv", strip.white=TRUE)
# clean data
dat1 <- subset(dat1, select = c("Name.in.English", "Countries", "Country.codes.alpha.3", "Degree.of.endangerment",
"Number.of.speakers", "Latitude", "Longitude"))
names(dat1) <- c("language", "country", "country_code", "degree_endanger", "speakers", "lat", "long")
# where number of speakers is 0, make degree endangered 'extinct'
dat1$degree_endanger[dat1$speakers == 0] <- 'Extinct'
# disable scientific notation
options(scipen = 999)
# extract data on north america
namer <- dat1[dat1$country_code == "CAN" | dat1$country_code == "CAN, USA" | dat1$country_code == "USA" |
dat1$country_code == "MEX",]
# relevel factors so that colors match and legend ordered correctly
namer$degree_endanger <- factor(namer$degree_endanger, levels = c("Vulnerable",
"Definitely endangered", "Critically endangered",
"Severely endangered", "Extinct"))
# make colour palette
pal <- colorFactor(c("#FFC300", "#FF5733", "#C70039", "#900C3F", "#808B96"), namer$degree_endanger)
# pop-up information
lab <- paste(namer$language,"|", "Speakers:", namer$speakers, sep = " ")
# make the map
m <- leaflet(data = namer) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 3)
lang_map <- m %>% addProviderTiles("CartoDB.Positron", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = 5,
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(degree_endanger)) %>%
addLegend("topright", pal = pal, values = ~degree_endanger,
title = "Degree Endangered", opacity = 0.6)
