library(dplyr)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggthemes")
install.packages("tidyr")
install.packages("reshape2")
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
dat1 <- read.csv(paste0(project, "/budget1.csv"))
dat2 <- read.csv(paste0(project, "/budget2.csv"))
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
View(dat1)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
dat2$date <- as.Date(dat1$date, format = "%m/%d/%Y")
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
sum(dat1$expenditure)
dat_meals <- dat1 %>%
filter(description == "breakfast" | description == "lunch" |
description == "dinner" | description == "2nd_dinner")
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidyr)
library (reshape2)
dat_meals <- dat1 %>%
filter(description == "breakfast" | description == "lunch" |
description == "dinner" | description == "2nd_dinner")
View(dat_meals)
dat_compare <- dat_meals %>%
group_by(person, description) %>%
summarise(total_exp = sum(expenditure), na.rm = T)
View(dat_compare)
ggplot(dat_compare, aes(person, total_exp, group = description, fill = description)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person") +
scale_fill_manual(values = c("darkseagreen", "darkslategray3", "darkolivegreen4", "gray68"),
name = "Meals",
breaks = c("2nd_dinner", "breakfast", "dinner", "lunch"),
labels = c("2nd Dinner", "Breakfast", "Dinner", "Lunch")) +
theme_igray() + scale_colour_tableau()
dat1$description <- ifelse(dat1$description == "snack", "snacks", dat1$description)
food_drinks <- "breakfast|lunch|dinner|2nd_dinner|snacks|drinks"
coffee <- "coffee"
home_admin <- "admin|home|parking|transport|phone"
recreation <- "recreation|travel"
neccessities <- "clothes|medicine"
gifts <- "gift|donation"
dat1$categories <- ifelse(grepl(food_drinks, dat1$description), "Food_Drinks",
ifelse(grepl(coffee, dat1$description), "Coffee",
ifelse(grepl(home_admin, dat1$description), "Home_Admin",
ifelse(grepl(recreation, dat1$description), "Recreation",
ifelse(grepl(neccessities, dat1$description), "Necessities",
ifelse(grepl(gifts, dat1$description), "Gift", "Groceries"))))))
# make bar graph using ggplot2 to represent this
ggplot(dat1, aes(categories, expenditure)) +
geom_bar(stat = "identity") +
xlab("Category") +
ylab("Expenditure") +
ggtitle("How We Spend Our Money")
View(dat2)
View(dat1)
summary(dat1)
head(dat1)
summary(dat1$person)
dat1 <- read.csv(paste0(project, "/budget1.csv", stringAsFactors = T))
dat1 <- read.csv(paste0(project, "/budget1.csv"), stringAsFactors = T)
dat1 <- read.csv(paste0(project, "/budget1.csv")), stringAsFactors = T
dat1 <- read.csv(paste0(project, "/budget1.csv")) stringAsFactors = T
View(dat2)
View(dat1)
dat1$person <- as.factor(dat1$person)
summary(dat1)
dat1$description <- as.factor(dat1$description)
summary(dat1)
summary(dat1$se)
summary(dat1$description)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidyr)
library (reshape2)
# initalize folders
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
dat2 <- read.csv(paste0(project, "/budget2.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
summary(dat1)
summary(dat1$description)
View(dat1)
dat1 <- read.csv(paste0(project, "/budget1.csv"))
dat2 <- read.csv(paste0(project, "/budget2.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
summary(dat1$description)
dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
summary(dat1$description)
dat1$description <- as.factor(dat1$description)
summary(dat1$description)
View(dat1)
dat1 <- read.csv(paste0(project, "/budget1.csv"))
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
summary(dat1$description)
dat1$description <- as.factor(dat1$description)
summary(dat1$description)
dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
summary(dat1$description)
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
summary(dat1)
exp_by_person <- dat1 %>%
group_by(person) %>%
summarise(expenditure)
exp_by_person <- dat1 %>%
group_by(person) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
View(exp_by_person)
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
View(exp_by_person)
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
at1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
#dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
# load libraries
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidyr)
library (reshape2)
# initalize folders
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
#dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
dat1$description <- ifelse(dat1$description == "snack", "snsacks", dat1$description)
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
#dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
dat1$description <- ifelse(dat1$description = "snack", "snacks", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
dat1 <- read.csv(paste0(project, "/budget1.csv"))
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
dat1$description <-as.character(dat1$description)
dat1$description <- ifelse(dat1$description == "snack", "snacks", dat1$description)
dat1$description <- as.factor(dat1$description)
summary(dat1$description)
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
ben_coffee <- dat1 %>%
filter(person == "Ben" & details == "coffee")
View(ben_coffee)
ben_coffee <- dat1 %>%
filter(person == "Ben" & description == "coffee")
View(ben_coffee)
summary(ben_coffee$details)
ben_coffee$details <- as.factor(ben_coffee$details)
summary(ben_coffee$details)
for (i in ben_coffee$description) {
ben_coffee$cum_exp[ben_coffee$description == i] <- cumsum(ben_coffee$expenditure[ben_coffee$description == i])
print(i)
}
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 1) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 2) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee from Nov 2015- Nov 2016") +
ggtitle("Ben's Spending on Coffee") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 2) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee Nov 2015- Nov 2016") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 1) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee Nov 2015- Nov 2016") + theme_economist()
View(dat1)
mp <- NULL
mapWorld <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
library(ggplot2)
library(dplyr)
library(reshape2)
library(ggmap)
library(rgdal)
library(rgeos)
library(maptools)
library(tidyr)
library(tmap)
library(raster) #to read in shapefile
library(sp)
setwd("/Users/xing/Documents/maps101")
# import data
dat1 <- read.csv("/Users/xing/Documents/maps101/data.csv")
mp <- NULL
mapWorld <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
mp <- ggplot() +   mapWorld
mp
apWorld <- borders("world", colour="gray50", fill="gray50", alpha=0.5) # create a layer of borders
mp <- ggplot() + mapWorld
mp
?borders
mapWorld <- borders("world", colour="gray50") # create a layer of borders
mp <- ggplot() + mapWorld
mp
rm(apWorld)
mapWorld <- borders("world", colour="gray50", fill="gray") # create a layer of borders
mp <- ggplot() + mapWorld
mp
canada.cities
can <- dat1[dat1$Countries == "Canada",]
View(can)
names(can)
names(dat1) <- c("id", "language", "country", "country_code", "degree_endanger", "speakers", "lat", "long")
View(dat1)
can <- dat1[dat1$Countries == "Canada",]
View(can)
can <- dat1[dat1$country == "Canada",]
View(can)
View(dat1)
cmap <- borders("canada", colour="gray")
?borders
ggplot() + mapWorld +
geom_point(data = can, aes(x = long, y = lat), na.rm = F)
ggplot() + mapWorld +
geom_point(data = can,
aes(x = long, y = lat), na.rm = F,
color = "orange", alpha = 0.6, size = 3)
ggplot() + mapWorld +
geom_point(data = can,
aes(x = long, y = lat), na.rm = F,
color = "orange", alpha = 0.6, size = 1)
View(can)
ggplot() + mapWorld +
geom_point(data = can,
aes(x = long, y = lat), na.rm = F,
color = degree_endanger, alpha = 0.6, size = speakers)
ggplot() + mapWorld +
geom_point(data = can,
aes(x = long, y = lat),
color = degree_endanger, size = speakers)
ggplot() + mapWorld +
geom_point(data = can,
aes(x = long, y = lat),
color = "red", size = speakers)
ggplot() + mapWorld +
geom_point(data = can,
aes(x = long, y = lat,
color = degree_endager, size = speakers))
ggplot() + mapWorld +
geom_point(data = can,
aes(x = long, y = lat,
color = degree_endanger, size = speakers))
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers))
options(scipen = 999)
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
scale_colour_gradientn()
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
scale_colour_gradientn(colours="degree_endanger")
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
scale_colour_gradientn(colours="blue")
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
scale_colour_gradientn(colours="rainbow")
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
scale_colour_gradientn(colours="rainbow(4)")
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
scale_fill_brew("YlOrRd")
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
scale_fill_brewer("YlOrRd")
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
scale_color_hue("Number of Speakers") +
scale_size_discrete("Degree of Endangerment") +
theme_nothing(legend = TRUE)
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
scale_size_discrete("Degree of Endangerment") +
theme_nothing(legend = TRUE)
ggplot() + mapWorld +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
theme_nothing(legend = TRUE)
worldmap <- borders("world", colour="gray50", fill="gray") # create a layer of borders
ggplot() + worldmap +
geom_point(data = dat1,
aes(x = long, y = lat,
color = degree_endanger, size = speakers)) +
theme_nothing(legend = TRUE)
